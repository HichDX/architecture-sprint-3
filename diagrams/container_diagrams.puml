@startuml
'!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

'LAYOUT_WITH_LEGEND


Person(user, "Пользователь")

Enterprise_Boundary(e1, "Умный дом"){

Container(api_gateway, "Api Gateway")
Container(control_device, "Управление устройствами", "Включение/отключение отопления, регулирование температуры")
Container(view_temp, "Мониторинг температуры", "Информация о температуре с датчиков")
Container(users, "Управление пользователями", "Добавление/редактирование/удаление пользователей")
Container(control_gate, "Управление воротами", "Автоматическое открытие/закрытие ворот")
Container(control_view, "Управление наблюдением", "Удаленное наблюдение за домом")
Container(notification, "Управление уведомлениями", "Отправка уведомлений пользователю")

ContainerDb(device_DB, "БД", "PostgreSQL")
ContainerDb(temp_DB, "БД", "PostgreSQL")
ContainerDb(users_DB, "БД", "PostgreSQL")
ContainerDb(gate_DB, "БД", "PostgreSQL")
ContainerDb(view_DB, "БД", "PostgreSQL")
ContainerDb(notification_DB, "БД", "PostgreSQL")

ContainerQueue(Kafka, "Шина данных", "Kafka")

Rel(user, api_gateway, "Пользуется", "REST")


Rel(api_gateway, control_device, "Включить отопление", "REST")
Rel(control_device, device_DB, "Чтение/Запись")

Rel(api_gateway, view_temp,"Посмотреть температуру", "REST")
Rel(view_temp, temp_DB, "Чтение/Запись")

Rel(api_gateway, users, "Добавить/Редактировать/Удалить пользователя", "REST")
Rel(users, users_DB, "Чтение/Запись")

Rel(api_gateway, control_gate, "Открыть ворота", "REST")
Rel(control_gate, gate_DB, "Чтение/Запись")

Rel(api_gateway, control_view,"Выбрать камеру", "REST")
Rel(control_view, view_DB, "Чтение/Запись")

Rel(control_device, Kafka, "Включить отопление")
Rel(view_temp, Kafka, "Посмотреть температуру")
Rel(users, Kafka, "Добавить пользователя")
Rel(control_gate, Kafka, "Открыть ворота")
Rel(control_view, Kafka, "Выбрать камеру")
Rel(Kafka, notification, "Уведомить пользователя")
Rel_U(notification, user, "Уведомить пользователя")

Rel(notification, notification_DB,"Чтение/Запись", "REST")

}
@enduml